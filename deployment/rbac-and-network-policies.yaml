apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: lumina-ai-security-policy
  namespace: lumina-ai
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 169.254.169.254/32  # Block access to EC2 metadata service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lumina-ai-restricted
  namespace: lumina-ai
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lumina-ai-restricted-binding
  namespace: lumina-ai
subjects:
- kind: ServiceAccount
  name: lumina-ai-sa
  namespace: lumina-ai
roleRef:
  kind: Role
  name: lumina-ai-restricted
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lumina-ai-sa
  namespace: lumina-ai
